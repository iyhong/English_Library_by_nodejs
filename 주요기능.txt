//트랙잭션 시작
conn.beginTransaction(function(err){
  if(err){throw err;}

  });
//트랜잭션끝


//트랜잭션 시작과 끝 사이에 넣어줘야함
//커밋
conn.commit(function(err) {
  if (err) {
    //롤백
    conn.rollback(function() {
      throw err;
    });
  }
});


//세션사용준비
var session = require('express-session');

app.use(session({
  secret: '@#@$MYSIGN#@$#$',  // 쿠키에 저장할 connect.sid값을 암호화할 키값 입력
  resave: false,  //세션 아이디를 접속할때마다 새롭게 발급하지 않음
  saveUninitialized: true,  //세션 아이디를 실제 사용하기전에는 발급하지 않음
}));


//세션지우기
req.session.destroy(function(err){
  if(err){
    console.log(err);
    res.status(500).send('Internal Server Error');
  }else{
    //
  }
});


//숫자 자릿수포맷 만드는 함수(ex. 00012)
function leadingZeros(n, digits) {
  console.log('===leadingZeros 함수===')
  var zero = '';
  n = n.toString();
  if (n.length < digits) {
    for (var i = 0; i < digits - n.length; i++)
      zero += '0';
  }
  return zero + n;
}


//오늘날짜 만들기 Date사용
if(!rentalStart){
  let dt = new Date();
  rentalStart = dt.getFullYear()+'-';
  rentalStart += dt.getMonth()+1+'-';
  rentalStart += dt.getDate();
}


//ajax 요청한 곳으로 값리턴하기
res.send({row:'false'});
//or
res.send({bookName : bookName,
          memberName : memberName,
          totalPrice : totalPrice,
          rentalPayment : rentalPayment,
          willPay : willPay,
          rentalCode : rentalCode,
          bookTotalDay : bookTotalDay
});


// 날짜 차이 계산 함수
// date1 : 기준 날짜(YYYY-MM-DD), date2 : 대상 날짜(YYYY-MM-DD)
function getDateDiff(date1,date2) {
  var arrDate1 = date1.split("-");
  var getDate1 = new Date(parseInt(arrDate1[0]),parseInt(arrDate1[1])-1,parseInt(arrDate1[2]));
  console.log('date1 : '+date1);
  var arrDate2 = date2.split("-");
  var getDate2 = new Date(parseInt(arrDate2[0]),parseInt(arrDate2[1])-1,parseInt(arrDate2[2]));
  console.log('date2 : '+date2);
  var getDiffTime = getDate1.getTime() - date2.getTime();
  return Math.floor(getDiffTime / (1000 * 60 * 60 * 24));
}



//route 나누기
module.exports = function(route, conn){

return route;
}

//or
module.exports = function(){
var express = require('express');
var route = express.Router();
var mysql = require('mysql');
var conn = mysql.createConnection({
  host     : 'localhost',
  user     : 'root',
  password : 'java0000',
  database : 'library'
});
return route;
}
